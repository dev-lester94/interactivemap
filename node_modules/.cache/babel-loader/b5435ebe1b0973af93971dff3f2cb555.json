{"ast":null,"code":"var _jsxFileName = \"/Users/reisturm/Desktop/Projects/interactivemap/src/components/Searchbar.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport '../css/Searchbar.css';\nexport class Searchbar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      query: '',\n      buildings: []\n    };\n\n    this.handleInputChange = () => {\n      this.setState({\n        query: this.search.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/polygons').then(response => {\n      this.setState({\n        buildings: response.data\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      placeholder: \"Search...\",\n      ref: input => this.search = input,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.state.query));\n  }\n\n} // export class Searchbar extends Component {\n//   state = {\n//     buildings: {},\n//     suggestions: [],\n//     text: ''\n//   };\n//   // function that is called whenever input changes\n//   onTextChanged = e => {\n//     const value = e.target.value;\n//     let suggestions = [];\n//     if (value.length > 0) {\n//       const regex = new RegExp(`^${value}`, 'i');\n//       suggestions = this.state.buildings\n//         .map(building => building.name)\n//         .sort()\n//         .filter(v => regex.test(v));\n//     }\n//     this.setState(() => ({ suggestions, text: value }));\n//   };\n//   renderSuggestions() {\n//     const { suggestions } = this.state;\n//     if (suggestions.length === 0) {\n//       return null;\n//     }\n//     return (\n//       <ul>\n//         {suggestions.map(building => (\n//           <li onClick={() => this.suggestionSelected(building)}>{building}</li>\n//         ))}\n//       </ul>\n//     );\n//   }\n//   suggestionSelected(value) {\n//     this.setState(() => ({ text: value, suggestions: [] }));\n//   }\n//   render() {\n//     const { text } = this.state;\n//     return (\n//       <div className='autoCompleteText'>\n//         <input\n//           value={text}\n//           onChange={this.onTextChanged}\n//           placeholder='Search...'\n//           type='text'\n//         />\n//         {this.renderSuggestions()}\n//       </div>\n//     );\n//   }\n// }\n\nexport default Searchbar;","map":{"version":3,"sources":["/Users/reisturm/Desktop/Projects/interactivemap/src/components/Searchbar.js"],"names":["React","Component","axios","Searchbar","state","query","buildings","handleInputChange","setState","search","value","componentDidMount","get","then","response","data","render","input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AAEA,OAAO,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACvCG,KADuC,GAC/B;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,SAAS,EAAE;AAFL,KAD+B;;AAAA,SAcvCC,iBAduC,GAcnB,MAAM;AACxB,WAAKC,QAAL,CAAc;AACZH,QAAAA,KAAK,EAAE,KAAKI,MAAL,CAAYC;AADP,OAAd;AAGD,KAlBsC;AAAA;;AAMvCC,EAAAA,iBAAiB,GAAG;AAClBT,IAAAA,KAAK,CAACU,GAAN,CAAU,gCAAV,EAA4CC,IAA5C,CAAiDC,QAAQ,IAAI;AAC3D,WAAKN,QAAL,CAAc;AACZF,QAAAA,SAAS,EAAEQ,QAAQ,CAACC;AADR,OAAd;AAGD,KAJD;AAKD;;AAQDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,WAAW,EAAC,WADd;AAEE,MAAA,GAAG,EAAEC,KAAK,IAAK,KAAKR,MAAL,GAAcQ,KAF/B;AAGE,MAAA,QAAQ,EAAE,KAAKV,iBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKH,KAAL,CAAWC,KAAf,CANF,CADF;AAUD;;AA/BsC,C,CAkCzC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeF,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport '../css/Searchbar.css';\n\nexport class Searchbar extends Component {\n  state = {\n    query: '',\n    buildings: []\n  };\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/polygons').then(response => {\n      this.setState({\n        buildings: response.data\n      });\n    });\n  }\n\n  handleInputChange = () => {\n    this.setState({\n      query: this.search.value\n    });\n  };\n\n  render() {\n    return (\n      <form>\n        <input\n          placeholder='Search...'\n          ref={input => (this.search = input)}\n          onChange={this.handleInputChange}\n        />\n        <p>{this.state.query}</p>\n      </form>\n    );\n  }\n}\n\n// export class Searchbar extends Component {\n//   state = {\n//     buildings: {},\n//     suggestions: [],\n//     text: ''\n//   };\n\n//   // function that is called whenever input changes\n//   onTextChanged = e => {\n//     const value = e.target.value;\n//     let suggestions = [];\n//     if (value.length > 0) {\n//       const regex = new RegExp(`^${value}`, 'i');\n//       suggestions = this.state.buildings\n//         .map(building => building.name)\n//         .sort()\n//         .filter(v => regex.test(v));\n//     }\n//     this.setState(() => ({ suggestions, text: value }));\n//   };\n\n//   renderSuggestions() {\n//     const { suggestions } = this.state;\n//     if (suggestions.length === 0) {\n//       return null;\n//     }\n//     return (\n//       <ul>\n//         {suggestions.map(building => (\n//           <li onClick={() => this.suggestionSelected(building)}>{building}</li>\n//         ))}\n//       </ul>\n//     );\n//   }\n\n//   suggestionSelected(value) {\n//     this.setState(() => ({ text: value, suggestions: [] }));\n//   }\n//   render() {\n//     const { text } = this.state;\n//     return (\n//       <div className='autoCompleteText'>\n//         <input\n//           value={text}\n//           onChange={this.onTextChanged}\n//           placeholder='Search...'\n//           type='text'\n//         />\n//         {this.renderSuggestions()}\n//       </div>\n//     );\n//   }\n// }\n\nexport default Searchbar;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/reisturm/Desktop/Projects/interactivemap/src/components/Searchbar.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport '../css/Searchbar.css';\nimport buildingsJSON from '../buildings.json';\nexport class Searchbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextChanged = e => {\n      const value = e.target.value;\n      let suggestions = [];\n\n      if (value.length > 0) {\n        const regex = new RegExp(\"^\".concat(value), 'i');\n        suggestions = this.items.sort().filter(v => regex.test(v));\n      }\n\n      this.setState(() => ({\n        suggestions,\n        text: value\n      }));\n    };\n\n    this.items = buildingsJSON.map(b => b.desc);\n    this.state = {\n      suggestions: [],\n      text: ''\n    };\n  } // function that is called whenever input changes\n\n\n  suggestionSelected(value) {\n    this.setState(() => ({\n      text: value,\n      suggestions: []\n    }));\n  }\n\n  renderSuggestions() {\n    const suggestions = this.state.suggestions;\n\n    if (suggestions.length === 0) {\n      return null;\n    }\n\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, suggestions.map(building => React.createElement(\"li\", {\n      onClick: () => this.suggestionSelected(building),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, building)));\n  }\n\n  render() {\n    const text = this.state.text;\n    return React.createElement(\"div\", {\n      className: \"autoCompleteText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: text,\n      onChange: this.onTextChanged,\n      placeholder: \"Search...\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), this.renderSuggestions());\n  }\n\n}\nexport default Searchbar;","map":{"version":3,"sources":["/Users/reisturm/Desktop/Projects/interactivemap/src/components/Searchbar.js"],"names":["React","Component","axios","buildingsJSON","Searchbar","constructor","props","onTextChanged","e","value","target","suggestions","length","regex","RegExp","items","sort","filter","v","test","setState","text","map","b","desc","state","suggestionSelected","renderSuggestions","building","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AAEA,OAAOC,aAAP,MAA0B,mBAA1B;AAEA,OAAO,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AACvCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,aAVmB,GAUHC,CAAC,IAAI;AACnB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAIE,WAAW,GAAG,EAAlB;;AACA,UAAIF,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAsB;AACpB,cAAMC,KAAK,GAAG,IAAIC,MAAJ,YAAeL,KAAf,GAAwB,GAAxB,CAAd;AACAE,QAAAA,WAAW,GAAG,KAAKI,KAAL,CAAWC,IAAX,GAAkBC,MAAlB,CAAyBC,CAAC,IAAIL,KAAK,CAACM,IAAN,CAAWD,CAAX,CAA9B,CAAd;AACD;;AACD,WAAKE,QAAL,CAAc,OAAO;AAAET,QAAAA,WAAF;AAAeU,QAAAA,IAAI,EAAEZ;AAArB,OAAP,CAAd;AACD,KAlBkB;;AAEjB,SAAKM,KAAL,GAAaZ,aAAa,CAACmB,GAAd,CAAkBC,CAAC,IAAIA,CAAC,CAACC,IAAzB,CAAb;AACA,SAAKC,KAAL,GAAa;AACXd,MAAAA,WAAW,EAAE,EADF;AAEXU,MAAAA,IAAI,EAAE;AAFK,KAAb;AAID,GARsC,CAUvC;;;AAWAK,EAAAA,kBAAkB,CAACjB,KAAD,EAAQ;AACxB,SAAKW,QAAL,CAAc,OAAO;AAAEC,MAAAA,IAAI,EAAEZ,KAAR;AAAeE,MAAAA,WAAW,EAAE;AAA5B,KAAP,CAAd;AACD;;AAEDgB,EAAAA,iBAAiB,GAAG;AAAA,UACVhB,WADU,GACM,KAAKc,KADX,CACVd,WADU;;AAElB,QAAIA,WAAW,CAACC,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,aAAO,IAAP;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,WAAW,CAACW,GAAZ,CAAgBM,QAAQ,IACvB;AAAI,MAAA,OAAO,EAAE,MAAM,KAAKF,kBAAL,CAAwBE,QAAxB,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuDA,QAAvD,CADD,CADH,CADF;AAOD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACCR,IADD,GACU,KAAKI,KADf,CACCJ,IADD;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAEA,IADT;AAEE,MAAA,QAAQ,EAAE,KAAKd,aAFjB;AAGE,MAAA,WAAW,EAAC,WAHd;AAIE,MAAA,IAAI,EAAC,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOG,KAAKoB,iBAAL,EAPH,CADF;AAWD;;AArDsC;AAwDzC,eAAevB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport '../css/Searchbar.css';\n\nimport buildingsJSON from '../buildings.json';\n\nexport class Searchbar extends Component {\n  constructor(props) {\n    super(props);\n    this.items = buildingsJSON.map(b => b.desc);\n    this.state = {\n      suggestions: [],\n      text: ''\n    };\n  }\n\n  // function that is called whenever input changes\n  onTextChanged = e => {\n    const value = e.target.value;\n    let suggestions = [];\n    if (value.length > 0) {\n      const regex = new RegExp(`^${value}`, 'i');\n      suggestions = this.items.sort().filter(v => regex.test(v));\n    }\n    this.setState(() => ({ suggestions, text: value }));\n  };\n\n  suggestionSelected(value) {\n    this.setState(() => ({ text: value, suggestions: [] }));\n  }\n\n  renderSuggestions() {\n    const { suggestions } = this.state;\n    if (suggestions.length === 0) {\n      return null;\n    }\n    return (\n      <ul>\n        {suggestions.map(building => (\n          <li onClick={() => this.suggestionSelected(building)}>{building}</li>\n        ))}\n      </ul>\n    );\n  }\n\n  render() {\n    const { text } = this.state;\n\n    return (\n      <div className='autoCompleteText'>\n        <input\n          value={text}\n          onChange={this.onTextChanged}\n          placeholder='Search...'\n          type='text'\n        />\n        {this.renderSuggestions()}\n      </div>\n    );\n  }\n}\n\nexport default Searchbar;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/reisturm/Desktop/Projects/interactivemap/src/App.js\";\nimport React, { Component } from 'react';\nimport { Layout, Menu, Icon } from 'antd';\nimport { GoogleMap, withScriptjs, withGoogleMap, Polygon } from 'react-google-maps';\nimport axios from 'axios';\nimport './css/app.css';\nimport './map';\nimport WrappedMap from './map';\nimport { Drawer } from 'antd'; //const { Layout, Menu, Breadcrumb, Icon } = antd;\n\nconst Header = Layout.Header,\n      Content = Layout.Content,\n      Footer = Layout.Footer,\n      Sider = Layout.Sider;\nconst SubMenu = Menu.SubMenu;\nlet mapPolygons = [];\nlet mapPolygonsData;\nlet drawerInfos = [];\nlet sampleInfo = [{\n  name: 'South Parking Garage',\n  outer: [{\n    lat: 37.333729,\n    lng: -121.880411\n  }, {\n    lat: 37.333757,\n    lng: -121.880434\n  }, {\n    lat: 37.333685,\n    lng: -121.880593\n  }, {\n    lat: 37.333702,\n    lng: -121.880617\n  }, {\n    lat: 37.333674,\n    lng: -121.880675\n  }, {\n    lat: 37.33365,\n    lng: -121.88066\n  }, {\n    lat: 37.333243,\n    lng: -121.881519\n  }, {\n    lat: 37.333263,\n    lng: -121.881544\n  }, {\n    lat: 37.333232,\n    lng: -121.881606\n  }, {\n    lat: 37.333208,\n    lng: -121.881588\n  }, {\n    lat: 37.333132,\n    lng: -121.88174\n  }, {\n    lat: 37.332451,\n    lng: -121.881225\n  }, {\n    lat: 37.33252,\n    lng: -121.881079\n  }, {\n    lat: 37.332491,\n    lng: -121.881055\n  }, {\n    lat: 37.33253,\n    lng: -121.880996\n  }, {\n    lat: 37.332553,\n    lng: -121.881008\n  }, {\n    lat: 37.332959,\n    lng: -121.880155\n  }, {\n    lat: 37.332934,\n    lng: -121.880134\n  }, {\n    lat: 37.332963,\n    lng: -121.880068\n  }, {\n    lat: 37.332981,\n    lng: -121.88008\n  }, {\n    lat: 37.333069,\n    lng: -121.879894\n  }],\n  inner: [],\n  center: [{\n    lat: 37.333015,\n    lng: -121.880859\n  }],\n  img: './css/southParkingGarage.jpg',\n  desc: '5-story parking structure located on the corner of S. 7th and E. San Salvador Streets. The Parking Services Office is located at the Entrance of the garage.',\n  services: ['Operation hours between 6:00 am to 12:00 am', 'Second service placeholder', 'Third service placeholder']\n}];\nvar hoverTimeout;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      collapsed: false,\n      visible: false,\n      polygon: [],\n      info: sampleInfo[0],\n      center: {\n        lat: 37.3352,\n        lng: -121.8811\n      },\n      clickedPolygonIndex: -1\n    };\n\n    this.onCollapse = collapsed => {\n      //console.log(collapsed);\n      this.setState({\n        collapsed\n      });\n    };\n\n    this.showDrawer = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.onClose = () => {\n      //console.log(this.state.clickedPolygonIndex);\n      mapPolygons[this.state.clickedPolygonIndex].props.options.fillColor = '#36688F';\n      this.setState({\n        visible: false,\n        polygon: mapPolygons\n      });\n    };\n  }\n\n  /*Add sample info to make sure the drawer has some information from the start\n  Grab all the polygons json objects and store in mapPolygonData\n  Create the polygons and store in mapPolygonsData\n  clickPolygon is passed the name of the building that was clicked. Set states with info for the drawer, center the map with polygon, and make the drawer visible\n  clickPolygon is passed the name of the building that was clicked and center the map with polygon\n   */\n  clickPolygon(name) {\n    clearTimeout(hoverTimeout);\n    console.log('clicked'); //console.log(name);\n\n    let polygonData = mapPolygonsData.filter(function (building) {\n      //console.log(item)\n      return building.name === name;\n    });\n    let polygonIndex;\n\n    for (var i = 0; i < mapPolygonsData.length; i++) {\n      if (mapPolygonsData[i].name === name) {\n        //console.log(mapPolygonsData[i].name);\n        //console.log(i);\n        polygonIndex = i;\n        break;\n      }\n    } //console.log(polygonIndex);\n    //console.log(mapPolygons);\n    //console.log(mapPolygons[polygonIndex]);\n    //console.log(mapPolygons[polygonIndex].props);\n    //console.log(mapPolygons[polygonIndex].props.options);\n\n\n    mapPolygons[polygonIndex].props.options.fillColor = '#FF0000'; //console.log(polygonData[0]);\n\n    this.setState({\n      info: polygonData[0],\n      visible: true,\n      polygon: mapPolygons,\n      clickedPolygonIndex: polygonIndex //center: {lat: polygonData[0].center[0].lat, lng: polygonData[0].center[0].lng}\n\n    });\n  }\n\n  hoverOverPolygon(name) {\n    clearTimeout(hoverTimeout); //clearInterval(hoverInterval);\n\n    hoverTimeout = setTimeout(() => {\n      console.log('hover'); //console.log(name);\n\n      let polygonIndex;\n\n      for (var i = 0; i < mapPolygonsData.length; i++) {\n        if (mapPolygonsData[i].name === name) {\n          //console.log(mapPolygonsData[i].name);\n          //console.log(i);\n          polygonIndex = i;\n          break;\n        }\n      } //console.log(polygonIndex);\n      //console.log(mapPolygons);\n      //console.log(mapPolygons[polygonIndex]);\n      //console.log(mapPolygons[polygonIndex].props);\n      //console.log(mapPolygons[polygonIndex].props.options);\n\n\n      mapPolygons[polygonIndex].props.options.fillColor = '#FF0000'; //mapPolygons[polygonIndex].props.options.fillColor = \"#36688F\";\n\n      this.setState({\n        polygon: mapPolygons //info: polygonData[0],\n        //visible: true\n        //center: {lat: polygonData[0].center[0].lat, lng: polygonData[0].center[0].lng}\n\n      });\n    }, 100);\n  }\n\n  hoverLeavePolygon(name) {\n    //this.setState({visible:true});\n    clearTimeout(hoverTimeout);\n    console.log('leaving'); //console.log(name);\n\n    let polygonIndex;\n\n    for (var i = 0; i < mapPolygonsData.length; i++) {\n      if (mapPolygonsData[i].name === name) {\n        //console.log(mapPolygonsData[i].name);\n        //console.log(i);\n        polygonIndex = i;\n        break;\n      }\n    } //console.log(polygonIndex);#36688F\n    //console.log(mapPolygons);\n    //console.log(mapPolygons[polygonIndex]);\n    //console.log(mapPolygons[polygonIndex].props);\n    //console.log(mapPolygons[polygonIndex].props.options);\n\n\n    mapPolygons[polygonIndex].props.options.fillColor = '#36688F'; //mapPolygons[polygonIndex].props.options.fillOpacity = \"0\";\n\n    this.setState({\n      polygon: mapPolygons //info: polygonData[0],\n      //visible: true\n      //center: {lat: polygonData[0].center[0].lat, lng: polygonData[0].center[0].lng}\n\n    });\n  }\n\n  clickService(name) {\n    let polygonData = mapPolygonsData.filter(function (item) {\n      //console.log(item)\n      return item.name === name;\n    }); //console.log(polygonData[0]);\n    //console.log(polygonData[0].center[0].lat);\n    //console.log(polygonData[0].center[0].lng);\n\n    this.setState({\n      center: {\n        lat: polygonData[0].center[0].lat,\n        lng: polygonData[0].center[0].lng\n      }\n    });\n  }\n\n  componentDidMount() {\n    axios.get('http://www.localhost:5000/test').then(response => {\n      //console.log(data);\n      mapPolygonsData = response.data;\n      console.log(mapPolygonsData);\n      var coords = [];\n\n      for (var i = 0; i < mapPolygonsData.length; i++) {\n        coords.push(mapPolygonsData[i].outer);\n        mapPolygons.push(React.createElement(Polygon, {\n          paths: coords,\n          options: {\n            strokeColor: '#36688F',\n            strokeOpacity: 0.8,\n            strokeWeight: 3,\n            fillColor: '#36688F',\n            fillOpacity: 0.35\n          },\n          onMouseMove: this.hoverOverPolygon.bind(this, mapPolygonsData[i].name),\n          onClick: this.clickPolygon.bind(this, mapPolygonsData[i].name),\n          onMouseOut: this.hoverLeavePolygon.bind(this, mapPolygonsData[i].name) //onMouseMove={hoverOverPolygon.bind(this, mapPolygonsData[i].name)}\n          //onClick={clickPolygon.bind(this, mapPolygonsData[i].name)}\n          ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }));\n        coords = [];\n      } //console.log(mapPolygons);\n\n\n      this.setState({\n        polygon: mapPolygons\n      });\n    });\n  }\n\n  render() {\n    //return <div>I'M READY TO USE THE BACK END APIS! :-)</div>;\n    return React.createElement(Layout, {\n      style: {\n        minHeight: '100vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(Header, {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require('./css/logo_sjsu.png'),\n      style: {\n        width: '150px'\n      },\n      alt: \"SJSU\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: require('./css/logo2_sjsu.png'),\n      alt: \"SJSU\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    })), React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(Sider, {\n      theme: \"light\",\n      width: \"250\",\n      collapsible: true,\n      collapsed: this.state.collapsed,\n      onCollapse: this.onCollapse,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }), React.createElement(Menu, {\n      theme: \"light\",\n      defaultSelectedKeys: ['1'],\n      mode: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      key: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"Services\")), React.createElement(SubMenu, {\n      key: \"sub1\",\n      title: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"car\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \"Parking\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      key: \"2\",\n      onClick: () => this.clickService('North Parking Garage'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"North Parking Garage\"), React.createElement(Menu.Item, {\n      key: \"3\",\n      onClick: () => this.clickService('South Parking Garage'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \"South Parking Garage\")), React.createElement(SubMenu, {\n      key: \"sub2\",\n      title: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"wallet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, \"Food & Drinks\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      key: \"4\",\n      onClick: () => this.clickService('Student Union'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, ' ', \"Student Union\")), React.createElement(SubMenu, {\n      key: \"sub3\",\n      title: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"printer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, \"Printers\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }))), React.createElement(Content, {\n      style: {\n        margin: '0 16px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"links\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: 'https://www.sjsu.edu',\n      target: '_blank',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, ' ', \"SJSU Home |\"), React.createElement(\"a\", {\n      href: '/',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363\n      },\n      __self: this\n    }, \" ICMap Home \")), React.createElement(WrappedMap, {\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyBSW43u4UaQa7TbRDkqyFyFUs3fORROh9Q\",\n      loadingElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }),\n      containerElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }),\n      closeDrawer: this.onClose,\n      openDrawer: this.showDrawer,\n      currentDrawerState: this.state.visible,\n      mapPolygons: this.state.polygon,\n      center: this.state.center,\n      drawerInfos: this.state.info //test = {this.test}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }))), React.createElement(Footer, {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, \"SJSU Interactive Campus Map \\xA92019 Created by ICMap\")) //   <Footer style={{ textAlign: 'center' }}>SJSU Interactive Campus Map ©2019 Created by ICMap</Footer>\n    // </Layout>\n    ;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/reisturm/Desktop/Projects/interactivemap/src/App.js"],"names":["React","Component","Layout","Menu","Icon","GoogleMap","withScriptjs","withGoogleMap","Polygon","axios","WrappedMap","Drawer","Header","Content","Footer","Sider","SubMenu","mapPolygons","mapPolygonsData","drawerInfos","sampleInfo","name","outer","lat","lng","inner","center","img","desc","services","hoverTimeout","App","state","collapsed","visible","polygon","info","clickedPolygonIndex","onCollapse","setState","showDrawer","onClose","props","options","fillColor","clickPolygon","clearTimeout","console","log","polygonData","filter","building","polygonIndex","i","length","hoverOverPolygon","setTimeout","hoverLeavePolygon","clickService","item","componentDidMount","get","then","response","data","coords","push","strokeColor","strokeOpacity","strokeWeight","fillOpacity","bind","render","minHeight","require","width","margin","height","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Layout, Menu, Icon } from 'antd';\nimport {\n  GoogleMap,\n  withScriptjs,\n  withGoogleMap,\n  Polygon\n} from 'react-google-maps';\nimport axios from 'axios';\nimport './css/app.css';\nimport './map';\nimport WrappedMap from './map';\nimport { Drawer } from 'antd';\n\n//const { Layout, Menu, Breadcrumb, Icon } = antd;\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nlet mapPolygons = [];\nlet mapPolygonsData;\nlet drawerInfos = [];\nlet sampleInfo = [\n  {\n    name: 'South Parking Garage',\n    outer: [\n      { lat: 37.333729, lng: -121.880411 },\n      { lat: 37.333757, lng: -121.880434 },\n      { lat: 37.333685, lng: -121.880593 },\n      { lat: 37.333702, lng: -121.880617 },\n      { lat: 37.333674, lng: -121.880675 },\n      { lat: 37.33365, lng: -121.88066 },\n      { lat: 37.333243, lng: -121.881519 },\n      { lat: 37.333263, lng: -121.881544 },\n      { lat: 37.333232, lng: -121.881606 },\n      { lat: 37.333208, lng: -121.881588 },\n      { lat: 37.333132, lng: -121.88174 },\n      { lat: 37.332451, lng: -121.881225 },\n      { lat: 37.33252, lng: -121.881079 },\n      { lat: 37.332491, lng: -121.881055 },\n      { lat: 37.33253, lng: -121.880996 },\n      { lat: 37.332553, lng: -121.881008 },\n      { lat: 37.332959, lng: -121.880155 },\n      { lat: 37.332934, lng: -121.880134 },\n      { lat: 37.332963, lng: -121.880068 },\n      { lat: 37.332981, lng: -121.88008 },\n      { lat: 37.333069, lng: -121.879894 }\n    ],\n    inner: [],\n    center: [{ lat: 37.333015, lng: -121.880859 }],\n    img: './css/southParkingGarage.jpg',\n    desc:\n      '5-story parking structure located on the corner of S. 7th and E. San Salvador Streets. The Parking Services Office is located at the Entrance of the garage.',\n    services: [\n      'Operation hours between 6:00 am to 12:00 am',\n      'Second service placeholder',\n      'Third service placeholder'\n    ]\n  }\n];\n\nvar hoverTimeout;\n\nclass App extends Component {\n  state = {\n    collapsed: false,\n    visible: false,\n    polygon: [],\n    info: sampleInfo[0],\n    center: { lat: 37.3352, lng: -121.8811 },\n    clickedPolygonIndex: -1\n  };\n\n  onCollapse = collapsed => {\n    //console.log(collapsed);\n    this.setState({ collapsed });\n  };\n\n  showDrawer = () => {\n    this.setState({ visible: true });\n  };\n  onClose = () => {\n    //console.log(this.state.clickedPolygonIndex);\n    mapPolygons[this.state.clickedPolygonIndex].props.options.fillColor =\n      '#36688F';\n\n    this.setState({\n      visible: false,\n      polygon: mapPolygons\n    });\n  };\n\n  /*Add sample info to make sure the drawer has some information from the start\n  Grab all the polygons json objects and store in mapPolygonData\n  Create the polygons and store in mapPolygonsData\n  clickPolygon is passed the name of the building that was clicked. Set states with info for the drawer, center the map with polygon, and make the drawer visible\n  clickPolygon is passed the name of the building that was clicked and center the map with polygon\n\n  */\n\n  clickPolygon(name) {\n    clearTimeout(hoverTimeout);\n    console.log('clicked');\n    //console.log(name);\n\n    let polygonData = mapPolygonsData.filter(function(building) {\n      //console.log(item)\n      return building.name === name;\n    });\n\n    let polygonIndex;\n    for (var i = 0; i < mapPolygonsData.length; i++) {\n      if (mapPolygonsData[i].name === name) {\n        //console.log(mapPolygonsData[i].name);\n        //console.log(i);\n        polygonIndex = i;\n        break;\n      }\n    }\n\n    //console.log(polygonIndex);\n    //console.log(mapPolygons);\n\n    //console.log(mapPolygons[polygonIndex]);\n    //console.log(mapPolygons[polygonIndex].props);\n    //console.log(mapPolygons[polygonIndex].props.options);\n\n    mapPolygons[polygonIndex].props.options.fillColor = '#FF0000';\n\n    //console.log(polygonData[0]);\n\n    this.setState({\n      info: polygonData[0],\n      visible: true,\n      polygon: mapPolygons,\n      clickedPolygonIndex: polygonIndex\n\n      //center: {lat: polygonData[0].center[0].lat, lng: polygonData[0].center[0].lng}\n    });\n  }\n\n  hoverOverPolygon(name) {\n    clearTimeout(hoverTimeout);\n    //clearInterval(hoverInterval);\n\n    hoverTimeout = setTimeout(() => {\n      console.log('hover');\n\n      //console.log(name);\n\n      let polygonIndex;\n\n      for (var i = 0; i < mapPolygonsData.length; i++) {\n        if (mapPolygonsData[i].name === name) {\n          //console.log(mapPolygonsData[i].name);\n          //console.log(i);\n          polygonIndex = i;\n          break;\n        }\n      }\n\n      //console.log(polygonIndex);\n      //console.log(mapPolygons);\n\n      //console.log(mapPolygons[polygonIndex]);\n      //console.log(mapPolygons[polygonIndex].props);\n      //console.log(mapPolygons[polygonIndex].props.options);\n\n      mapPolygons[polygonIndex].props.options.fillColor = '#FF0000';\n\n      //mapPolygons[polygonIndex].props.options.fillColor = \"#36688F\";\n\n      this.setState({\n        polygon: mapPolygons\n        //info: polygonData[0],\n        //visible: true\n        //center: {lat: polygonData[0].center[0].lat, lng: polygonData[0].center[0].lng}\n      });\n    }, 100);\n  }\n\n  hoverLeavePolygon(name) {\n    //this.setState({visible:true});\n\n    clearTimeout(hoverTimeout);\n    console.log('leaving');\n    //console.log(name);\n\n    let polygonIndex;\n\n    for (var i = 0; i < mapPolygonsData.length; i++) {\n      if (mapPolygonsData[i].name === name) {\n        //console.log(mapPolygonsData[i].name);\n        //console.log(i);\n        polygonIndex = i;\n        break;\n      }\n    }\n\n    //console.log(polygonIndex);#36688F\n    //console.log(mapPolygons);\n\n    //console.log(mapPolygons[polygonIndex]);\n    //console.log(mapPolygons[polygonIndex].props);\n    //console.log(mapPolygons[polygonIndex].props.options);\n\n    mapPolygons[polygonIndex].props.options.fillColor = '#36688F';\n    //mapPolygons[polygonIndex].props.options.fillOpacity = \"0\";\n\n    this.setState({\n      polygon: mapPolygons\n      //info: polygonData[0],\n      //visible: true\n      //center: {lat: polygonData[0].center[0].lat, lng: polygonData[0].center[0].lng}\n    });\n  }\n\n  clickService(name) {\n    let polygonData = mapPolygonsData.filter(function(item) {\n      //console.log(item)\n      return item.name === name;\n    });\n\n    //console.log(polygonData[0]);\n\n    //console.log(polygonData[0].center[0].lat);\n    //console.log(polygonData[0].center[0].lng);\n\n    this.setState({\n      center: {\n        lat: polygonData[0].center[0].lat,\n        lng: polygonData[0].center[0].lng\n      }\n    });\n  }\n\n  componentDidMount() {\n    axios.get('http://www.localhost:5000/test').then(response => {\n      //console.log(data);\n      mapPolygonsData = response.data;\n      console.log(mapPolygonsData);\n      var coords = [];\n\n      for (var i = 0; i < mapPolygonsData.length; i++) {\n        coords.push(mapPolygonsData[i].outer);\n\n        mapPolygons.push(\n          <Polygon\n            paths={coords}\n            options={{\n              strokeColor: '#36688F',\n              strokeOpacity: 0.8,\n              strokeWeight: 3,\n              fillColor: '#36688F',\n              fillOpacity: 0.35\n            }}\n            onMouseMove={this.hoverOverPolygon.bind(\n              this,\n              mapPolygonsData[i].name\n            )}\n            onClick={this.clickPolygon.bind(this, mapPolygonsData[i].name)}\n            onMouseOut={this.hoverLeavePolygon.bind(\n              this,\n              mapPolygonsData[i].name\n            )}\n            //onMouseMove={hoverOverPolygon.bind(this, mapPolygonsData[i].name)}\n            //onClick={clickPolygon.bind(this, mapPolygonsData[i].name)}\n          />\n        );\n        coords = [];\n      }\n\n      //console.log(mapPolygons);\n      this.setState({\n        polygon: mapPolygons\n      });\n    });\n  }\n\n  render() {\n    //return <div>I'M READY TO USE THE BACK END APIS! :-)</div>;\n    return (\n      <Layout style={{ minHeight: '100vh' }}>\n        <Header className='header'>\n          <img\n            src={require('./css/logo_sjsu.png')}\n            style={{ width: '150px' }}\n            alt='SJSU'\n          ></img>\n          <img src={require('./css/logo2_sjsu.png')} alt='SJSU'></img>\n        </Header>\n        <Layout>\n          <Sider\n            theme='light'\n            width='250'\n            collapsible\n            collapsed={this.state.collapsed}\n            onCollapse={this.onCollapse}\n          >\n            <div className='logo' />\n            <Menu theme='light' defaultSelectedKeys={['1']} mode='inline'>\n              <Menu.Item key='1'>\n                <span>Services</span>\n              </Menu.Item>\n              <SubMenu\n                key='sub1'\n                title={\n                  <span>\n                    <Icon type='car' />\n                    <span>Parking</span>\n                  </span>\n                }\n              >\n                <Menu.Item\n                  key='2'\n                  onClick={() => this.clickService('North Parking Garage')}\n                >\n                  North Parking Garage\n                </Menu.Item>\n                <Menu.Item\n                  key='3'\n                  onClick={() => this.clickService('South Parking Garage')}\n                >\n                  South Parking Garage\n                </Menu.Item>\n              </SubMenu>\n              <SubMenu\n                key='sub2'\n                title={\n                  <span>\n                    <Icon type='wallet' />\n                    <span>Food & Drinks</span>\n                  </span>\n                }\n              >\n                <Menu.Item\n                  key='4'\n                  onClick={() => this.clickService('Student Union')}\n                >\n                  {' '}\n                  Student Union\n                </Menu.Item>\n                {/* <Menu.Item key=\"6\">Team 1</Menu.Item>\n      <Menu.Item key=\"8\">Team 2</Menu.Item> */}\n              </SubMenu>\n              <SubMenu\n                key='sub3'\n                title={\n                  <span>\n                    <Icon type='printer' />\n                    <span>Printers</span>\n                  </span>\n                }\n              ></SubMenu>\n            </Menu>\n          </Sider>\n          <Content style={{ margin: '0 16px' }}>\n            <div className='links'>\n              <a href={'https://www.sjsu.edu'} target={'_blank'}>\n                {' '}\n                SJSU Home |\n              </a>\n              <a href={'/'}> ICMap Home </a>\n            </div>\n            {/* <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>Bill is a cat.</div> */}\n            <WrappedMap\n              googleMapURL={`https://maps.googleapis.com/maps/api/js?key=AIzaSyBSW43u4UaQa7TbRDkqyFyFUs3fORROh9Q`}\n              loadingElement={<div style={{ height: `100%` }} />}\n              containerElement={<div style={{ height: `100%` }} />}\n              mapElement={<div style={{ height: `100%` }} />}\n              closeDrawer={this.onClose}\n              openDrawer={this.showDrawer}\n              currentDrawerState={this.state.visible}\n              mapPolygons={this.state.polygon}\n              center={this.state.center}\n              drawerInfos={this.state.info}\n              //test = {this.test}\n            />\n          </Content>\n          {/* <Footer style={{ textAlign: 'center' }}>SJSU Interactive Campus Map ©2019 Created by ICMap</Footer> */}\n        </Layout>\n        <Footer style={{ textAlign: 'center' }}>\n          SJSU Interactive Campus Map ©2019 Created by ICMap\n        </Footer>\n      </Layout>\n      //   <Footer style={{ textAlign: 'center' }}>SJSU Interactive Campus Map ©2019 Created by ICMap</Footer>\n\n      // </Layout>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
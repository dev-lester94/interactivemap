{"ast":null,"code":"var _jsxFileName = \"/Users/reisturm/Desktop/Projects/interactivemap/src/App.js\";\nimport React, { Component } from 'react';\nimport { Layout, Menu, Icon } from 'antd';\nimport { Polygon } from 'react-google-maps';\nimport axios from 'axios';\nimport './css/app.css';\nimport MapContainer from './map'; // import WrappedMap from './map';\n\nconst Header = Layout.Header,\n      Content = Layout.Content,\n      Footer = Layout.Footer,\n      Sider = Layout.Sider;\nconst SubMenu = Menu.SubMenu;\nlet mapPolygons = [];\nlet buildingInfo = [];\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      collapsed: false,\n      visible: false,\n      polygon: [],\n      info: [],\n      center: {\n        lat: 37.3352,\n        lng: -121.8811\n      } // ops:{\n      //   strokeColor: '#36688F',\n      //   strokeOpacity: 0.8,\n      //   strokeWeight: 3,\n      //   fillColor: '#36688F',\n      //   fillOpacity: 0.35\n      // }\n\n    };\n\n    this.onCollapse = collapsed => {\n      //console.log(collapsed);\n      this.setState({\n        collapsed\n      });\n    };\n\n    this.showDrawer = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleMouseOver = idx => {\n      console.log(mapPolygons[idx]);\n      mapPolygons[idx].props.options = {\n        strokeColor: '#ffbb00',\n        strokeOpacity: 0.8,\n        strokeWeight: 3,\n        fillColor: '#ffbb00',\n        fillOpacity: 0.35\n      };\n      this.setState({\n        polygon: mapPolygons\n      });\n    };\n\n    this.clickPolygon = name => {\n      console.log(name);\n      let polygonData = buildingInfo.filter(function (item) {\n        //console.log(\"what's this\", item.desc)\n        return item.desc === name;\n      });\n      console.log(polygonData);\n      console.log(polygonData[0]);\n      this.setState({\n        info: polygonData[0],\n        visible: true // ops:{\n        //     strokeColor: '#36688F',\n        //     strokeOpacity: 0.8,\n        //     strokeWeight: 3,\n        //     fillColor: 'green',\n        //     fillOpacity: 0.35\n        // }\n        // center: {lat: polygonData[0].center[0].lat, lng: polygonData[0].center[0].lng}\n\n      });\n    };\n\n    this.clickService = name => {\n      //let test = [];\n      let polygonData = buildingInfo.filter(function (item) {\n        //console.log(item.desc);\n        return item.desc === name;\n      });\n      this.setState({\n        info: polygonData[0],\n        visible: true // center: {lat: polygonData[0].center[0].lat, lng: polygonData[0].center[0].lng}\n\n      });\n    };\n  }\n\n  /*Add sample info to make sure the drawer has some information from the start\n  Grab all the polygons json objects and store in mapPolygonData\n  Create the polygons and store in mapPolygonsData\n  clickPolygon is passed the name of the building that was clicked. Set states with info for the drawer, center the map with polygon, and make the drawer visible\n  clickPolygon is passed the name of the building that was clicked and center the map with polygon\n   */\n  componentDidMount() {\n    axios.get('http://www.localhost:4000/polygons').then(res => {\n      console.log(res.data);\n      res.data.forEach(building => {\n        Object.entries(building).forEach(([key, value]) => {\n          if (value.outer !== undefined & value.inner !== undefined) {\n            buildingInfo.push(value);\n          }\n        });\n      });\n      var coords = [];\n\n      for (var i = 0; i < buildingInfo.length; i++) {\n        coords.push(buildingInfo[i].outer);\n        coords.push(buildingInfo[i].inner);\n        mapPolygons.push(React.createElement(Polygon, {\n          idx: i,\n          paths: coords,\n          options: {\n            strokeColor: '#36688F',\n            strokeOpacity: 0,\n            strokeWeight: 3,\n            fillColor: '#36688F',\n            fillOpacity: 0\n          } //options={ops}\n          ,\n          onClick: this.clickPolygon.bind(this, buildingInfo[i].desc),\n          onMouseOver: this.handleMouseOver.bind(this, i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }));\n        coords = [];\n      }\n\n      this.setState({\n        polygon: mapPolygons\n      }); // console.log(mapPolygons);\n    });\n  }\n\n  render() {\n    //return <div>I'M READY TO USE THE BACK END APIS! :-)</div>;\n    return React.createElement(Layout, {\n      style: {\n        minHeight: '100vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Header, {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: require('./css/logo_sjsu.png'),\n      style: {\n        width: '150px'\n      },\n      alt: \"SJSU\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: require('./css/logo2_sjsu.png'),\n      alt: \"SJSU\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })), React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Sider, {\n      theme: \"light\",\n      width: \"250\",\n      collapsible: true,\n      collapsed: this.state.collapsed,\n      onCollapse: this.onCollapse,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(Menu, {\n      theme: \"light\",\n      defaultSelectedKeys: ['1'],\n      mode: \"inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      key: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Services\")), React.createElement(SubMenu, {\n      key: \"sub1\",\n      title: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"car\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Parking\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      key: \"2\",\n      onClick: () => this.clickService('North Parking Garage'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"North Parking Garage\"), React.createElement(Menu.Item, {\n      key: \"3\",\n      onClick: () => this.clickService('South Parking Garage'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"South Parking Garage\")), React.createElement(SubMenu, {\n      key: \"sub2\",\n      title: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"wallet\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Food & Drinks\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      key: \"4\",\n      onClick: () => this.clickService('Student Union'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, ' ', \"Student Union\")), React.createElement(SubMenu, {\n      key: \"sub3\",\n      title: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"printer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Printers\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }))), React.createElement(Content, {\n      style: {\n        margin: '0 16px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"links\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: 'https://www.sjsu.edu',\n      target: '_blank',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, ' ', \"SJSU Home |\"), React.createElement(\"a\", {\n      href: '/',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \" ICMap Home \")), React.createElement(Footer, {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"SJSU Interactive Campus Map \\xA92019 Created by ICMap\"))), React.createElement(Footer, {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"SJSU Interactive Campus Map \\xA92019 Created by ICMap\")) //   <Footer style={{ textAlign: 'center' }}>SJSU Interactive Campus Map ©2019 Created by ICMap</Footer>\n    // </Layout>\n    ;\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/reisturm/Desktop/Projects/interactivemap/src/App.js"],"names":["React","Component","Layout","Menu","Icon","Polygon","axios","MapContainer","Header","Content","Footer","Sider","SubMenu","mapPolygons","buildingInfo","App","state","collapsed","visible","polygon","info","center","lat","lng","onCollapse","setState","showDrawer","onClose","handleMouseOver","idx","console","log","props","options","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","clickPolygon","name","polygonData","filter","item","desc","clickService","componentDidMount","get","then","res","data","forEach","building","Object","entries","key","value","outer","undefined","inner","push","coords","i","length","bind","render","minHeight","require","width","margin","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Layout, Menu, Icon } from 'antd';\nimport { Polygon } from 'react-google-maps';\nimport axios from 'axios';\nimport './css/app.css';\nimport MapContainer from './map';\n// import WrappedMap from './map';\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nlet mapPolygons = [];\nlet buildingInfo = [];\n\nclass App extends Component {\n  state = {\n    collapsed: false,\n    visible: false,\n    polygon: [],\n    info: [],\n    center: { lat: 37.3352, lng: -121.8811 }\n    // ops:{\n    //   strokeColor: '#36688F',\n    //   strokeOpacity: 0.8,\n    //   strokeWeight: 3,\n    //   fillColor: '#36688F',\n    //   fillOpacity: 0.35\n    // }\n  };\n\n  onCollapse = collapsed => {\n    //console.log(collapsed);\n    this.setState({ collapsed });\n  };\n\n  showDrawer = () => {\n    this.setState({ visible: true });\n  };\n  onClose = () => {\n    this.setState({ visible: false });\n  };\n\n  // changeColor=()=>{\n  //   var ops;\n  //   if (currentDrawerState == true){\n  //     ops = {\n  //         strokeColor: '#36688F',\n  //         strokeOpacity: 0.8,\n  //         strokeWeight: 3,\n  //         fillColor: '#36688F',\n  //         fillOpacity: 0.35\n  //     }\n  //   }\n  //   else{\n  //     ops = {\n  //       strokeColor: '#36688F',\n  //       strokeOpacity: 0.8,\n  //       strokeWeight: 3,\n  //       fillColor: 'green',\n  //       fillOpacity: 0.35\n  //   }\n  // }\n\n  handleMouseOver = idx => {\n    console.log(mapPolygons[idx]);\n\n    mapPolygons[idx].props.options = {\n      strokeColor: '#ffbb00',\n      strokeOpacity: 0.8,\n      strokeWeight: 3,\n      fillColor: '#ffbb00',\n      fillOpacity: 0.35\n    };\n    this.setState({\n      polygon: mapPolygons\n    });\n  };\n  clickPolygon = name => {\n    console.log(name);\n\n    let polygonData = buildingInfo.filter(function(item) {\n      //console.log(\"what's this\", item.desc)\n      return item.desc === name;\n    });\n    console.log(polygonData);\n    console.log(polygonData[0]);\n\n    this.setState({\n      info: polygonData[0],\n      visible: true\n      // ops:{\n      //     strokeColor: '#36688F',\n      //     strokeOpacity: 0.8,\n      //     strokeWeight: 3,\n      //     fillColor: 'green',\n      //     fillOpacity: 0.35\n      // }\n\n      // center: {lat: polygonData[0].center[0].lat, lng: polygonData[0].center[0].lng}\n    });\n  };\n\n  clickService = name => {\n    //let test = [];\n    let polygonData = buildingInfo.filter(function(item) {\n      //console.log(item.desc);\n      return item.desc === name;\n    });\n    this.setState({\n      info: polygonData[0],\n      visible: true\n      // center: {lat: polygonData[0].center[0].lat, lng: polygonData[0].center[0].lng}\n    });\n  };\n\n  /*Add sample info to make sure the drawer has some information from the start\n  Grab all the polygons json objects and store in mapPolygonData\n  Create the polygons and store in mapPolygonsData\n  clickPolygon is passed the name of the building that was clicked. Set states with info for the drawer, center the map with polygon, and make the drawer visible\n  clickPolygon is passed the name of the building that was clicked and center the map with polygon\n\n  */\n  componentDidMount() {\n    axios.get('http://www.localhost:4000/polygons').then(res => {\n      console.log(res.data);\n\n      res.data.forEach(building => {\n        Object.entries(building).forEach(([key, value]) => {\n          if ((value.outer !== undefined) & (value.inner !== undefined)) {\n            buildingInfo.push(value);\n          }\n        });\n      });\n\n      var coords = [];\n      for (var i = 0; i < buildingInfo.length; i++) {\n        coords.push(buildingInfo[i].outer);\n        coords.push(buildingInfo[i].inner);\n\n        mapPolygons.push(\n          <Polygon\n            idx={i}\n            paths={coords}\n            options={{\n              strokeColor: '#36688F',\n              strokeOpacity: 0,\n              strokeWeight: 3,\n              fillColor: '#36688F',\n              fillOpacity: 0\n            }}\n            //options={ops}\n            onClick={this.clickPolygon.bind(this, buildingInfo[i].desc)}\n            onMouseOver={this.handleMouseOver.bind(this, i)}\n          />\n        );\n        coords = [];\n      }\n      this.setState({\n        polygon: mapPolygons\n      });\n      // console.log(mapPolygons);\n    });\n  }\n\n  render() {\n    //return <div>I'M READY TO USE THE BACK END APIS! :-)</div>;\n    return (\n      <Layout style={{ minHeight: '100vh' }}>\n        <Header className='header'>\n          <img\n            src={require('./css/logo_sjsu.png')}\n            style={{ width: '150px' }}\n            alt='SJSU'\n          ></img>\n          <img src={require('./css/logo2_sjsu.png')} alt='SJSU'></img>\n        </Header>\n        <Layout>\n          <Sider\n            theme='light'\n            width='250'\n            collapsible\n            collapsed={this.state.collapsed}\n            onCollapse={this.onCollapse}\n          >\n            <div className='logo' />\n            <Menu theme='light' defaultSelectedKeys={['1']} mode='inline'>\n              <Menu.Item key='1'>\n                <span>Services</span>\n              </Menu.Item>\n              <SubMenu\n                key='sub1'\n                title={\n                  <span>\n                    <Icon type='car' />\n                    <span>Parking</span>\n                  </span>\n                }\n              >\n                <Menu.Item\n                  key='2'\n                  onClick={() => this.clickService('North Parking Garage')}\n                >\n                  North Parking Garage\n                </Menu.Item>\n                <Menu.Item\n                  key='3'\n                  onClick={() => this.clickService('South Parking Garage')}\n                >\n                  South Parking Garage\n                </Menu.Item>\n              </SubMenu>\n              <SubMenu\n                key='sub2'\n                title={\n                  <span>\n                    <Icon type='wallet' />\n                    <span>Food & Drinks</span>\n                  </span>\n                }\n              >\n                <Menu.Item\n                  key='4'\n                  onClick={() => this.clickService('Student Union')}\n                >\n                  {' '}\n                  Student Union\n                </Menu.Item>\n                {/* <Menu.Item key=\"6\">Team 1</Menu.Item>\n              <Menu.Item key=\"8\">Team 2</Menu.Item> */}\n              </SubMenu>\n              <SubMenu\n                key='sub3'\n                title={\n                  <span>\n                    <Icon type='printer' />\n                    <span>Printers</span>\n                  </span>\n                }\n              ></SubMenu>\n            </Menu>\n          </Sider>\n          <Content style={{ margin: '0 16px' }}>\n            <div className='links'>\n              <a href={'https://www.sjsu.edu'} target={'_blank'}>\n                {' '}\n                SJSU Home |\n              </a>\n              <a href={'/'}> ICMap Home </a>\n            </div>\n            {/* <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>Bill is a cat.</div> */}\n\n            {/* <WrappedMap\n              googleMapURL={`https://maps.googleapis.com/maps/api/js?key=AIzaSyBYHRpERyouBGwLLQqO49sDZIrsoLylFwE`}\n              loadingElement={<div style={{ height: `100%` }} />}\n              containerElement={<div style={{ height: `100%` }} />}\n              mapElement={<div style={{ height: `100%` }} />}\n              closeDrawer={this.onClose}\n              openDrawer={this.showDrawer}\n              currentDrawerState={this.state.visible}\n              mapPolygons={this.state.polygon}\n              center={this.state.center}\n              drawerInfos={this.state.info}\n            /> */}\n            <Footer style={{ textAlign: 'center' }}>\n              SJSU Interactive Campus Map ©2019 Created by ICMap\n            </Footer>\n          </Content>\n          {/* <Footer style={{ textAlign: 'center' }}>SJSU Interactive Campus Map ©2019 Created by ICMap</Footer> */}\n        </Layout>\n        <Footer style={{ textAlign: 'center' }}>\n          SJSU Interactive Campus Map ©2019 Created by ICMap\n        </Footer>\n      </Layout>\n      //   <Footer style={{ textAlign: 'center' }}>SJSU Interactive Campus Map ©2019 Created by ICMap</Footer>\n\n      // </Layout>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
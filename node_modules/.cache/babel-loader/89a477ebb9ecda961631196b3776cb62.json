{"ast":null,"code":"var _jsxFileName = \"/Users/reisturm/Desktop/Projects/interactivemap/src/map.js\";\nimport React, { Component } from 'react'; // import {\n//   GoogleMap,\n//   withScriptjs,\n//   withGoogleMap,\n//   Polygon\n// } from 'react-google-maps';\n\nimport { Drawer } from 'antd';\nimport axios from 'axios';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper, Polygon } from 'google-maps-react';\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.drawPolygons = () => {\n      return this.state.buildings.map(building => {\n        let acro = Object.keys(building);\n        let info = Object.values(building)[0];\n        console.log(info.outer);\n        return React.createElement(Polygon, {\n          paths: [info.outer, info.inner],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.state = {\n      buildings: [{\n        ENG: {\n          desc: 'Davidson College of Engineering',\n          outer: [{\n            lat: 37.33639,\n            lng: -121.881953\n          }, {\n            lat: 37.336457,\n            lng: -121.88181\n          }, {\n            lat: 37.33638,\n            lng: -121.881753\n          }, {\n            lat: 37.336474,\n            lng: -121.881546\n          }, {\n            lat: 37.336496,\n            lng: -121.88156\n          }, {\n            lat: 37.336504,\n            lng: -121.881538\n          }, {\n            lat: 37.336523,\n            lng: -121.881529\n          }, {\n            lat: 37.336544,\n            lng: -121.881534\n          }, {\n            lat: 37.336557,\n            lng: -121.881551\n          }, {\n            lat: 37.336582,\n            lng: -121.881548\n          }, {\n            lat: 37.336735,\n            lng: -121.881226\n          }, {\n            lat: 37.336708,\n            lng: -121.881179\n          }, {\n            lat: 37.3367,\n            lng: -121.881129\n          }, {\n            lat: 37.336712,\n            lng: -121.881076\n          }, {\n            lat: 37.336742,\n            lng: -121.88104\n          }, {\n            lat: 37.336792,\n            lng: -121.881024\n          }, {\n            lat: 37.336836,\n            lng: -121.881032\n          }, {\n            lat: 37.336854,\n            lng: -121.881043\n          }, {\n            lat: 37.336862,\n            lng: -121.881029\n          }, {\n            lat: 37.336834,\n            lng: -121.881007\n          }, {\n            lat: 37.336882,\n            lng: -121.880907\n          }, {\n            lat: 37.336897,\n            lng: -121.880909\n          }, {\n            lat: 37.336934,\n            lng: -121.880933\n          }, {\n            lat: 37.33694,\n            lng: -121.880921\n          }, {\n            lat: 37.336951,\n            lng: -121.880921\n          }, {\n            lat: 37.337154,\n            lng: -121.881082\n          }, {\n            lat: 37.337161,\n            lng: -121.881081\n          }, {\n            lat: 37.337596,\n            lng: -121.881402\n          }, {\n            lat: 37.337583,\n            lng: -121.881435\n          }, {\n            lat: 37.337618,\n            lng: -121.88146\n          }, {\n            lat: 37.33764,\n            lng: -121.881431\n          }, {\n            lat: 37.337659,\n            lng: -121.881443\n          }, {\n            lat: 37.337653,\n            lng: -121.881457\n          }, {\n            lat: 37.337752,\n            lng: -121.881533\n          }, {\n            lat: 37.337697,\n            lng: -121.881653\n          }, {\n            lat: 37.337737,\n            lng: -121.881683\n          }, {\n            lat: 37.337705,\n            lng: -121.881749\n          }, {\n            lat: 37.337699,\n            lng: -121.881745\n          }, {\n            lat: 37.337675,\n            lng: -121.881792\n          }, {\n            lat: 37.337669,\n            lng: -121.881794\n          }, {\n            lat: 37.337643,\n            lng: -121.881779\n          }, {\n            lat: 37.33728,\n            lng: -121.882544\n          }, {\n            lat: 37.337244,\n            lng: -121.882516\n          }, {\n            lat: 37.337221,\n            lng: -121.882554\n          }, {\n            lat: 37.337128,\n            lng: -121.882484\n          }, {\n            lat: 37.337139,\n            lng: -121.882455\n          }, {\n            lat: 37.336686,\n            lng: -121.882123\n          }, {\n            lat: 37.336669,\n            lng: -121.882153\n          }, {\n            lat: 37.33665,\n            lng: -121.882141\n          }, {\n            lat: 37.336639,\n            lng: -121.882163\n          }, {\n            lat: 37.33661,\n            lng: -121.882139\n          }, {\n            lat: 37.336619,\n            lng: -121.882116\n          }, {\n            lat: 37.336608,\n            lng: -121.882107\n          }, {\n            lat: 37.336643,\n            lng: -121.882031\n          }, {\n            lat: 37.336637,\n            lng: -121.882025\n          }, {\n            lat: 37.336595,\n            lng: -121.882104\n          }, {\n            lat: 37.336573,\n            lng: -121.882098\n          }, {\n            lat: 37.336413,\n            lng: -121.881967\n          }],\n          inner: [{\n            lat: 37.337041,\n            lng: -121.881442\n          }, {\n            lat: 37.337055,\n            lng: -121.881413\n          }, {\n            lat: 37.336962,\n            lng: -121.881344\n          }, {\n            lat: 37.336654,\n            lng: -121.881993\n          }, {\n            lat: 37.336663,\n            lng: -121.881997\n          }, {\n            lat: 37.33672,\n            lng: -121.881875\n          }, {\n            lat: 37.336724,\n            lng: -121.881875\n          }, {\n            lat: 37.336935,\n            lng: -121.882028\n          }, {\n            lat: 37.336949,\n            lng: -121.881999\n          }, {\n            lat: 37.336985,\n            lng: -121.882024\n          }, {\n            lat: 37.33697,\n            lng: -121.882055\n          }, {\n            lat: 37.337136,\n            lng: -121.882177\n          }, {\n            lat: 37.3373,\n            lng: -121.881819\n          }, {\n            lat: 37.337267,\n            lng: -121.881794\n          }, {\n            lat: 37.337246,\n            lng: -121.881842\n          }, {\n            lat: 37.337189,\n            lng: -121.881803\n          }, {\n            lat: 37.337195,\n            lng: -121.88179\n          }, {\n            lat: 37.337211,\n            lng: -121.881799\n          }, {\n            lat: 37.337226,\n            lng: -121.881766\n          }, {\n            lat: 37.336935,\n            lng: -121.881548\n          }, {\n            lat: 37.336997,\n            lng: -121.881413\n          }]\n        }\n      }, {\n        IS: {\n          desc: 'Industrial Studies Building',\n          outer: [{\n            lat: 37.336971,\n            lng: -121.880754\n          }, {\n            lat: 37.337255,\n            lng: -121.880154\n          }, {\n            lat: 37.337319,\n            lng: -121.880201\n          }, {\n            lat: 37.337335,\n            lng: -121.880178\n          }, {\n            lat: 37.338027,\n            lng: -121.880702\n          }, {\n            lat: 37.338015,\n            lng: -121.880724\n          }, {\n            lat: 37.33811,\n            lng: -121.880797\n          }, {\n            lat: 37.33782,\n            lng: -121.881397\n          }, {\n            lat: 37.337603,\n            lng: -121.881231\n          }, {\n            lat: 37.337607,\n            lng: -121.881221\n          }, {\n            lat: 37.337599,\n            lng: -121.881214\n          }, {\n            lat: 37.337757,\n            lng: -121.880881\n          }, {\n            lat: 37.337646,\n            lng: -121.8808\n          }, {\n            lat: 37.337631,\n            lng: -121.880834\n          }, {\n            lat: 37.337639,\n            lng: -121.880843\n          }, {\n            lat: 37.337513,\n            lng: -121.881106\n          }, {\n            lat: 37.337487,\n            lng: -121.881087\n          }, {\n            lat: 37.337463,\n            lng: -121.881128\n          }, {\n            lat: 37.337286,\n            lng: -121.880994\n          }, {\n            lat: 37.33744,\n            lng: -121.880643\n          }, {\n            lat: 37.337308,\n            lng: -121.880543\n          }, {\n            lat: 37.337139,\n            lng: -121.880885\n          }],\n          inner: []\n        }\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(Map, {\n      google: this.props.google,\n      zoom: 17,\n      styles: mapStyles,\n      initialCenter: {\n        lat: 37.335201,\n        lng: -121.881151\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, this.drawPolygons());\n  }\n\n}\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyB6C4COk_CiplZhE0Mn4ZS76_zFoSUP1hU'\n})(MapContainer); // let key = 0;\n// let key2 = 0;\n// function Map({\n//   closeDrawer,\n//   openDrawer,\n//   currentDrawerState,\n//   mapPolygons,\n//   drawerInfos,\n//   center\n// }) {\n//   //console.log(center);\n//   // console.log(drawerInfos);\n//   //console.log(mapPolygons)\n//   //console.log(drawerInfos)\n//   //console.log(drawerInfos.img);\n//   //console.log(drawerInfos.services)\n//   return (\n//     <GoogleMap\n//       defaultZoom={17}\n//       // center={center}\n//       defaultCenter={{ lat: 37.3352, lng: -121.8811 }}\n//       // center={{lat: 37.272040, lng: -121.861260}}\n//       options={{\n//         styles: [\n//           {\n//             elementType: 'labels',\n//             featureType: 'poi.business',\n//             stylers: [{ visibility: 'off' }]\n//           }\n//         ]\n//       }}\n//     >\n//       <div>\n//         {mapPolygons.map(mapPolygon => (\n//           <div key={key++}> {mapPolygon} </div>\n//         ))}\n//       </div>\n//       <Drawer\n//         className='drawer'\n//         title={drawerInfos.desc}\n//         placement='left'\n//         closable={true}\n//         onClose={closeDrawer}\n//         visible={currentDrawerState}\n//       >\n//         {/* <h4>Charles W. Davidson College of Engineering</h4> */}\n//         {/* <img src={require(`${ drawerInfos.img }`)}></img> */}\n//         <p>{drawerInfos.desc}</p>\n//         {/* <div>\n//            {drawerInfos.services.map(service => <li key={key2++}> {service} </li>)}\n//        </div> */}\n//       </Drawer>\n//     </GoogleMap>\n//   );\n// }\n// const WrappedMap = withScriptjs(withGoogleMap(Map));\n// export default WrappedMap;","map":{"version":3,"sources":["/Users/reisturm/Desktop/Projects/interactivemap/src/map.js"],"names":["React","Component","Drawer","axios","Map","InfoWindow","Marker","GoogleApiWrapper","Polygon","MapContainer","constructor","props","drawPolygons","state","buildings","map","building","acro","Object","keys","info","values","console","log","outer","inner","ENG","desc","lat","lng","IS","render","google","mapStyles","width","height","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import {\n//   GoogleMap,\n//   withScriptjs,\n//   withGoogleMap,\n//   Polygon\n// } from 'react-google-maps';\nimport { Drawer } from 'antd';\nimport axios from 'axios';\n\nimport {\n  Map,\n  InfoWindow,\n  Marker,\n  GoogleApiWrapper,\n  Polygon\n} from 'google-maps-react';\n\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      buildings: [\n        {\n          ENG: {\n            desc: 'Davidson College of Engineering',\n            outer: [\n              { lat: 37.33639, lng: -121.881953 },\n              { lat: 37.336457, lng: -121.88181 },\n              { lat: 37.33638, lng: -121.881753 },\n              { lat: 37.336474, lng: -121.881546 },\n              { lat: 37.336496, lng: -121.88156 },\n              { lat: 37.336504, lng: -121.881538 },\n              { lat: 37.336523, lng: -121.881529 },\n              { lat: 37.336544, lng: -121.881534 },\n              { lat: 37.336557, lng: -121.881551 },\n              { lat: 37.336582, lng: -121.881548 },\n              { lat: 37.336735, lng: -121.881226 },\n              { lat: 37.336708, lng: -121.881179 },\n              { lat: 37.3367, lng: -121.881129 },\n              { lat: 37.336712, lng: -121.881076 },\n              { lat: 37.336742, lng: -121.88104 },\n              { lat: 37.336792, lng: -121.881024 },\n              { lat: 37.336836, lng: -121.881032 },\n              { lat: 37.336854, lng: -121.881043 },\n              { lat: 37.336862, lng: -121.881029 },\n              { lat: 37.336834, lng: -121.881007 },\n              { lat: 37.336882, lng: -121.880907 },\n              { lat: 37.336897, lng: -121.880909 },\n              { lat: 37.336934, lng: -121.880933 },\n              { lat: 37.33694, lng: -121.880921 },\n              { lat: 37.336951, lng: -121.880921 },\n              { lat: 37.337154, lng: -121.881082 },\n              { lat: 37.337161, lng: -121.881081 },\n              { lat: 37.337596, lng: -121.881402 },\n              { lat: 37.337583, lng: -121.881435 },\n              { lat: 37.337618, lng: -121.88146 },\n              { lat: 37.33764, lng: -121.881431 },\n              { lat: 37.337659, lng: -121.881443 },\n              { lat: 37.337653, lng: -121.881457 },\n              { lat: 37.337752, lng: -121.881533 },\n              { lat: 37.337697, lng: -121.881653 },\n              { lat: 37.337737, lng: -121.881683 },\n              { lat: 37.337705, lng: -121.881749 },\n              { lat: 37.337699, lng: -121.881745 },\n              { lat: 37.337675, lng: -121.881792 },\n              { lat: 37.337669, lng: -121.881794 },\n              { lat: 37.337643, lng: -121.881779 },\n              { lat: 37.33728, lng: -121.882544 },\n              { lat: 37.337244, lng: -121.882516 },\n              { lat: 37.337221, lng: -121.882554 },\n              { lat: 37.337128, lng: -121.882484 },\n              { lat: 37.337139, lng: -121.882455 },\n              { lat: 37.336686, lng: -121.882123 },\n              { lat: 37.336669, lng: -121.882153 },\n              { lat: 37.33665, lng: -121.882141 },\n              { lat: 37.336639, lng: -121.882163 },\n              { lat: 37.33661, lng: -121.882139 },\n              { lat: 37.336619, lng: -121.882116 },\n              { lat: 37.336608, lng: -121.882107 },\n              { lat: 37.336643, lng: -121.882031 },\n              { lat: 37.336637, lng: -121.882025 },\n              { lat: 37.336595, lng: -121.882104 },\n              { lat: 37.336573, lng: -121.882098 },\n              { lat: 37.336413, lng: -121.881967 }\n            ],\n            inner: [\n              { lat: 37.337041, lng: -121.881442 },\n              { lat: 37.337055, lng: -121.881413 },\n              { lat: 37.336962, lng: -121.881344 },\n              { lat: 37.336654, lng: -121.881993 },\n              { lat: 37.336663, lng: -121.881997 },\n              { lat: 37.33672, lng: -121.881875 },\n              { lat: 37.336724, lng: -121.881875 },\n              { lat: 37.336935, lng: -121.882028 },\n              { lat: 37.336949, lng: -121.881999 },\n              { lat: 37.336985, lng: -121.882024 },\n              { lat: 37.33697, lng: -121.882055 },\n              { lat: 37.337136, lng: -121.882177 },\n              { lat: 37.3373, lng: -121.881819 },\n              { lat: 37.337267, lng: -121.881794 },\n              { lat: 37.337246, lng: -121.881842 },\n              { lat: 37.337189, lng: -121.881803 },\n              { lat: 37.337195, lng: -121.88179 },\n              { lat: 37.337211, lng: -121.881799 },\n              { lat: 37.337226, lng: -121.881766 },\n              { lat: 37.336935, lng: -121.881548 },\n              { lat: 37.336997, lng: -121.881413 }\n            ]\n          }\n        },\n        {\n          IS: {\n            desc: 'Industrial Studies Building',\n            outer: [\n              { lat: 37.336971, lng: -121.880754 },\n              { lat: 37.337255, lng: -121.880154 },\n              { lat: 37.337319, lng: -121.880201 },\n              { lat: 37.337335, lng: -121.880178 },\n              { lat: 37.338027, lng: -121.880702 },\n              { lat: 37.338015, lng: -121.880724 },\n              { lat: 37.33811, lng: -121.880797 },\n              { lat: 37.33782, lng: -121.881397 },\n              { lat: 37.337603, lng: -121.881231 },\n              { lat: 37.337607, lng: -121.881221 },\n              { lat: 37.337599, lng: -121.881214 },\n              { lat: 37.337757, lng: -121.880881 },\n              { lat: 37.337646, lng: -121.8808 },\n              { lat: 37.337631, lng: -121.880834 },\n              { lat: 37.337639, lng: -121.880843 },\n              { lat: 37.337513, lng: -121.881106 },\n              { lat: 37.337487, lng: -121.881087 },\n              { lat: 37.337463, lng: -121.881128 },\n              { lat: 37.337286, lng: -121.880994 },\n              { lat: 37.33744, lng: -121.880643 },\n              { lat: 37.337308, lng: -121.880543 },\n              { lat: 37.337139, lng: -121.880885 }\n            ],\n            inner: []\n          }\n        }\n      ]\n    };\n  }\n\n  drawPolygons = () => {\n    return this.state.buildings.map(building => {\n      let acro = Object.keys(building);\n      let info = Object.values(building)[0];\n      console.log(info.outer);\n      return <Polygon paths={[info.outer, info.inner]} />;\n    });\n  };\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        zoom={17}\n        styles={mapStyles}\n        initialCenter={{ lat: 37.335201, lng: -121.881151 }}\n      >\n        {this.drawPolygons()}\n      </Map>\n    );\n  }\n}\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyB6C4COk_CiplZhE0Mn4ZS76_zFoSUP1hU'\n})(MapContainer);\n\n// let key = 0;\n// let key2 = 0;\n\n// function Map({\n//   closeDrawer,\n//   openDrawer,\n//   currentDrawerState,\n//   mapPolygons,\n//   drawerInfos,\n//   center\n// }) {\n//   //console.log(center);\n//   // console.log(drawerInfos);\n\n//   //console.log(mapPolygons)\n//   //console.log(drawerInfos)\n//   //console.log(drawerInfos.img);\n//   //console.log(drawerInfos.services)\n\n//   return (\n//     <GoogleMap\n//       defaultZoom={17}\n//       // center={center}\n//       defaultCenter={{ lat: 37.3352, lng: -121.8811 }}\n//       // center={{lat: 37.272040, lng: -121.861260}}\n//       options={{\n//         styles: [\n//           {\n//             elementType: 'labels',\n//             featureType: 'poi.business',\n//             stylers: [{ visibility: 'off' }]\n//           }\n//         ]\n//       }}\n//     >\n//       <div>\n//         {mapPolygons.map(mapPolygon => (\n//           <div key={key++}> {mapPolygon} </div>\n//         ))}\n//       </div>\n\n//       <Drawer\n//         className='drawer'\n//         title={drawerInfos.desc}\n//         placement='left'\n//         closable={true}\n//         onClose={closeDrawer}\n//         visible={currentDrawerState}\n//       >\n//         {/* <h4>Charles W. Davidson College of Engineering</h4> */}\n//         {/* <img src={require(`${ drawerInfos.img }`)}></img> */}\n//         <p>{drawerInfos.desc}</p>\n//         {/* <div>\n//            {drawerInfos.services.map(service => <li key={key2++}> {service} </li>)}\n//        </div> */}\n//       </Drawer>\n//     </GoogleMap>\n//   );\n// }\n\n// const WrappedMap = withScriptjs(withGoogleMap(Map));\n\n// export default WrappedMap;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/reisturm/Desktop/Projects/interactivemap/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/reisturm/Desktop/Projects/interactivemap/src/components/Searchbar.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 300px;\\n  padding: 20px;\\n  .select__menu-list::-webkit-scrollbar {\\n    background: #f1f1f1;\\n  }\\n  .select__menu-list::-webkit-scrollbar-thumb {\\n    background: #888;\\n  }\\n  .select__menu-list::-webkit-scrollbar-thumb:hover {\\n    background: #555;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Select } from 'react-select';\nimport axios from 'axios';\nimport '../css/Searchbar.css';\nimport Suggestions from './Suggestions';\nimport buildingsJSON from '../buildings.json'; // export class Searchbar extends Component {\n//   state = {\n//     buildings: buildingsJSON.map(b => b.desc),\n//     suggestions: [],\n//     text: ''\n//   };\n//   // function that is called whenever input changes\n//   onTextChanged = e => {\n//     const value = e.target.value;\n//     let suggestions = [];\n//     if (value.length > 0) {\n//       const regex = new RegExp(`^${value}`, 'i');\n//       suggestions = this.state.buildings\n//         .map(building => building.name)\n//         .sort()\n//         .filter(v => regex.test(v));\n//     }\n//     this.setState(() => ({ suggestions, text: value }));\n//   };\n//   renderSuggestions() {\n//     const { suggestions } = this.state;\n//     if (suggestions.length === 0) {\n//       return null;\n//     }\n//     return (\n//       <ul>\n//         {suggestions.map(building => (\n//           <li onClick={() => this.suggestionSelected(building)}>{building}</li>\n//         ))}\n//       </ul>\n//     );\n//   }\n//   suggestionSelected(value) {\n//     this.setState(() => ({ text: value, suggestions: [] }));\n//   }\n//   render() {\n//     const { text } = this.state;\n//     return (\n//       <div className='autoCompleteText'>\n//         <input\n//           value={text}\n//           onChange={this.onTextChanged}\n//           placeholder='Search...'\n//           type='text'\n//         />\n//         {this.renderSuggestions()}\n//       </div>\n//     );\n//   }\n// }\n\nclass Searchbar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      buildings: buildingsJSON.map(b => b.desc),\n      selectedOption: null\n    };\n\n    this.handleChange = selectedOption => {\n      this.setState({\n        selectedOption\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Select, {\n      value: selectedOption,\n      options: this.state,\n      onChange: this.handleChange,\n      placeholder: \"Search...\",\n      openMenuOnClick: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Searchbar;\nconst StyledSearch = styled(Select)(_templateObject());","map":{"version":3,"sources":["/Users/reisturm/Desktop/Projects/interactivemap/src/components/Searchbar.js"],"names":["React","Component","Select","axios","Suggestions","buildingsJSON","Searchbar","state","buildings","map","b","desc","selectedOption","handleChange","setState","render","StyledSearch","styled"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,aAAP,MAA0B,mBAA1B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCM,KADgC,GACxB;AACNC,MAAAA,SAAS,EAAEH,aAAa,CAACI,GAAd,CAAkBC,CAAC,IAAIA,CAAC,CAACC,IAAzB,CADL;AAENC,MAAAA,cAAc,EAAE;AAFV,KADwB;;AAAA,SAMhCC,YANgC,GAMjBD,cAAc,IAAI;AAC/B,WAAKE,QAAL,CAAc;AAAEF,QAAAA;AAAF,OAAd;AACD,KAR+B;AAAA;;AAUhCG,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAEH,cADT;AAEE,MAAA,OAAO,EAAE,KAAKL,KAFhB;AAGE,MAAA,QAAQ,EAAE,KAAKM,YAHjB;AAIE,MAAA,WAAW,EAAC,WAJd;AAKE,MAAA,eAAe,EAAE,KALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAWD;;AAtB+B;;AAyBlC,eAAeP,SAAf;AAEA,MAAMU,YAAY,GAAGC,MAAM,CAACf,MAAD,CAAT,mBAAlB","sourcesContent":["import React, { Component } from 'react';\nimport { Select } from 'react-select';\nimport axios from 'axios';\nimport '../css/Searchbar.css';\nimport Suggestions from './Suggestions';\n\nimport buildingsJSON from '../buildings.json';\n\n// export class Searchbar extends Component {\n//   state = {\n//     buildings: buildingsJSON.map(b => b.desc),\n//     suggestions: [],\n//     text: ''\n//   };\n\n//   // function that is called whenever input changes\n//   onTextChanged = e => {\n//     const value = e.target.value;\n//     let suggestions = [];\n//     if (value.length > 0) {\n//       const regex = new RegExp(`^${value}`, 'i');\n//       suggestions = this.state.buildings\n//         .map(building => building.name)\n//         .sort()\n//         .filter(v => regex.test(v));\n//     }\n//     this.setState(() => ({ suggestions, text: value }));\n//   };\n\n//   renderSuggestions() {\n//     const { suggestions } = this.state;\n//     if (suggestions.length === 0) {\n//       return null;\n//     }\n//     return (\n//       <ul>\n//         {suggestions.map(building => (\n//           <li onClick={() => this.suggestionSelected(building)}>{building}</li>\n//         ))}\n//       </ul>\n//     );\n//   }\n\n//   suggestionSelected(value) {\n//     this.setState(() => ({ text: value, suggestions: [] }));\n//   }\n//   render() {\n//     const { text } = this.state;\n\n//     return (\n//       <div className='autoCompleteText'>\n//         <input\n//           value={text}\n//           onChange={this.onTextChanged}\n//           placeholder='Search...'\n//           type='text'\n//         />\n//         {this.renderSuggestions()}\n//       </div>\n//     );\n//   }\n// }\n\nclass Searchbar extends Component {\n  state = {\n    buildings: buildingsJSON.map(b => b.desc),\n    selectedOption: null\n  };\n\n  handleChange = selectedOption => {\n    this.setState({ selectedOption });\n  };\n\n  render() {\n    return (\n      <div>\n        <Select\n          value={selectedOption}\n          options={this.state}\n          onChange={this.handleChange}\n          placeholder='Search...'\n          openMenuOnClick={false}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Searchbar;\n\nconst StyledSearch = styled(Select)`\n  width: 300px;\n  padding: 20px;\n  .select__menu-list::-webkit-scrollbar {\n    background: #f1f1f1;\n  }\n  .select__menu-list::-webkit-scrollbar-thumb {\n    background: #888;\n  }\n  .select__menu-list::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/reisturm/Desktop/Projects/interactivemap/src/components/Searchbar.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport '../css/Searchbar.css';\nimport Suggestions from './Suggestions';\nimport buildingsJSON from '../buildings.json'; // export class Searchbar extends Component {\n//   state = {\n//     query: '',\n//     buildings: buildingsJSON\n//   };\n// getInfo = () => {\n//   axios.get('http://localhost:4000/polygons').then(response => {\n//     console.log(response.data);\n//     console.log(\n//       response.data.map((r, idx) => {\n//       })\n//     );\n//   });\n// };\n//   handleInputChange = () => {\n//     this.setState({\n//       query: this.search.value\n//     });\n//   };\n//   render() {\n//     return (\n//       <div className='autoCompleteText'>\n//         <form>\n//           <input\n//             color='black'\n//             placeholder='Search...'\n//             ref={input => (this.search = input)}\n//             onChange={this.handleInputChange}\n//           />\n//           <Suggestions results={this.state.buildings} />\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n\nexport class Searchbar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      buildings: buildingsJSON.map(b => b.desc),\n      suggestions: [],\n      text: ''\n    };\n\n    this.onTextChanged = e => {\n      const value = e.target.value;\n      let suggestions = [];\n\n      if (value.length > 0) {\n        const regex = new RegExp(\"^\".concat(value), 'i');\n        suggestions = this.state.buildings.map(building => building.name).sort().filter(v => regex.test(v));\n      }\n\n      this.setState(() => ({\n        suggestions,\n        text: value\n      }));\n    };\n  }\n\n  renderSuggestions() {\n    const suggestions = this.state.suggestions;\n\n    if (suggestions.length === 0) {\n      return null;\n    }\n\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, suggestions.map(building => React.createElement(\"li\", {\n      onClick: () => this.suggestionSelected(building),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, building)));\n  }\n\n  suggestionSelected(value) {\n    this.setState(() => ({\n      text: value,\n      suggestions: []\n    }));\n  }\n\n  render() {\n    const text = this.state.text;\n    return React.createElement(\"div\", {\n      className: \"autoCompleteText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: text,\n      onChange: this.onTextChanged,\n      placeholder: \"Search...\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), this.renderSuggestions());\n  }\n\n}\nexport default Searchbar;","map":{"version":3,"sources":["/Users/reisturm/Desktop/Projects/interactivemap/src/components/Searchbar.js"],"names":["React","Component","axios","Suggestions","buildingsJSON","Searchbar","state","buildings","map","b","desc","suggestions","text","onTextChanged","e","value","target","length","regex","RegExp","building","name","sort","filter","v","test","setState","renderSuggestions","suggestionSelected","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAOC,aAAP,MAA0B,mBAA1B,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACvCK,KADuC,GAC/B;AACNC,MAAAA,SAAS,EAAEH,aAAa,CAACI,GAAd,CAAkBC,CAAC,IAAIA,CAAC,CAACC,IAAzB,CADL;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,IAAI,EAAE;AAHA,KAD+B;;AAAA,SAQvCC,aARuC,GAQvBC,CAAC,IAAI;AACnB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAIJ,WAAW,GAAG,EAAlB;;AACA,UAAII,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB;AACpB,cAAMC,KAAK,GAAG,IAAIC,MAAJ,YAAeJ,KAAf,GAAwB,GAAxB,CAAd;AACAJ,QAAAA,WAAW,GAAG,KAAKL,KAAL,CAAWC,SAAX,CACXC,GADW,CACPY,QAAQ,IAAIA,QAAQ,CAACC,IADd,EAEXC,IAFW,GAGXC,MAHW,CAGJC,CAAC,IAAIN,KAAK,CAACO,IAAN,CAAWD,CAAX,CAHD,CAAd;AAID;;AACD,WAAKE,QAAL,CAAc,OAAO;AAAEf,QAAAA,WAAF;AAAeC,QAAAA,IAAI,EAAEG;AAArB,OAAP,CAAd;AACD,KAnBsC;AAAA;;AAqBvCY,EAAAA,iBAAiB,GAAG;AAAA,UACVhB,WADU,GACM,KAAKL,KADX,CACVK,WADU;;AAElB,QAAIA,WAAW,CAACM,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,aAAO,IAAP;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,WAAW,CAACH,GAAZ,CAAgBY,QAAQ,IACvB;AAAI,MAAA,OAAO,EAAE,MAAM,KAAKQ,kBAAL,CAAwBR,QAAxB,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuDA,QAAvD,CADD,CADH,CADF;AAOD;;AAEDQ,EAAAA,kBAAkB,CAACb,KAAD,EAAQ;AACxB,SAAKW,QAAL,CAAc,OAAO;AAAEd,MAAAA,IAAI,EAAEG,KAAR;AAAeJ,MAAAA,WAAW,EAAE;AAA5B,KAAP,CAAd;AACD;;AACDkB,EAAAA,MAAM,GAAG;AAAA,UACCjB,IADD,GACU,KAAKN,KADf,CACCM,IADD;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAEA,IADT;AAEE,MAAA,QAAQ,EAAE,KAAKC,aAFjB;AAGE,MAAA,WAAW,EAAC,WAHd;AAIE,MAAA,IAAI,EAAC,MAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOG,KAAKc,iBAAL,EAPH,CADF;AAWD;;AApDsC;AAuDzC,eAAetB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport '../css/Searchbar.css';\nimport Suggestions from './Suggestions';\n\nimport buildingsJSON from '../buildings.json';\n\n// export class Searchbar extends Component {\n//   state = {\n//     query: '',\n//     buildings: buildingsJSON\n//   };\n\n// getInfo = () => {\n//   axios.get('http://localhost:4000/polygons').then(response => {\n//     console.log(response.data);\n//     console.log(\n//       response.data.map((r, idx) => {\n\n//       })\n//     );\n//   });\n// };\n\n//   handleInputChange = () => {\n//     this.setState({\n//       query: this.search.value\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <div className='autoCompleteText'>\n//         <form>\n//           <input\n//             color='black'\n//             placeholder='Search...'\n//             ref={input => (this.search = input)}\n//             onChange={this.handleInputChange}\n//           />\n//           <Suggestions results={this.state.buildings} />\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n\nexport class Searchbar extends Component {\n  state = {\n    buildings: buildingsJSON.map(b => b.desc),\n    suggestions: [],\n    text: ''\n  };\n\n  // function that is called whenever input changes\n  onTextChanged = e => {\n    const value = e.target.value;\n    let suggestions = [];\n    if (value.length > 0) {\n      const regex = new RegExp(`^${value}`, 'i');\n      suggestions = this.state.buildings\n        .map(building => building.name)\n        .sort()\n        .filter(v => regex.test(v));\n    }\n    this.setState(() => ({ suggestions, text: value }));\n  };\n\n  renderSuggestions() {\n    const { suggestions } = this.state;\n    if (suggestions.length === 0) {\n      return null;\n    }\n    return (\n      <ul>\n        {suggestions.map(building => (\n          <li onClick={() => this.suggestionSelected(building)}>{building}</li>\n        ))}\n      </ul>\n    );\n  }\n\n  suggestionSelected(value) {\n    this.setState(() => ({ text: value, suggestions: [] }));\n  }\n  render() {\n    const { text } = this.state;\n\n    return (\n      <div className='autoCompleteText'>\n        <input\n          value={text}\n          onChange={this.onTextChanged}\n          placeholder='Search...'\n          type='text'\n        />\n        {this.renderSuggestions()}\n      </div>\n    );\n  }\n}\n\nexport default Searchbar;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/reisturm/Desktop/Projects/interactivemap/src/components/Searchbar.js\";\nimport React, { Component } from 'react';\nexport class Searchbar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      suggestions: []\n    };\n\n    this.onTextChanged = e => {\n      const value = e.target.value;\n      let suggestions = [];\n\n      if (value.length > 0) {\n        const regex = new RegExp(\"^\".concat(value), 'i');\n        suggestions = this.props.buildings.map(building => building.name).sort().filter(v => regex.test(v));\n      }\n\n      console.log(suggestions);\n      this.setState(() => ({\n        suggestions\n      }));\n    };\n  }\n\n  renderSuggestions() {\n    const suggestions = this.state.suggestions;\n\n    if (suggestions.length === 0) {\n      return null;\n    }\n\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, suggestions.map(building => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, building)));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.onTextChanged,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), this.renderSuggestions());\n  }\n\n}\nexport default Searchbar;","map":{"version":3,"sources":["/Users/reisturm/Desktop/Projects/interactivemap/src/components/Searchbar.js"],"names":["React","Component","Searchbar","state","suggestions","onTextChanged","e","value","target","length","regex","RegExp","props","buildings","map","building","name","sort","filter","v","test","console","log","setState","renderSuggestions","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAAA;AAAA;AAAA,SACvCE,KADuC,GAC/B;AACNC,MAAAA,WAAW,EAAE;AADP,KAD+B;;AAAA,SAIvCC,aAJuC,GAIvBC,CAAC,IAAI;AACnB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAIH,WAAW,GAAG,EAAlB;;AACA,UAAIG,KAAK,CAACE,MAAN,GAAe,CAAnB,EAAsB;AACpB,cAAMC,KAAK,GAAG,IAAIC,MAAJ,YAAeJ,KAAf,GAAwB,GAAxB,CAAd;AACAH,QAAAA,WAAW,GAAG,KAAKQ,KAAL,CAAWC,SAAX,CACXC,GADW,CACPC,QAAQ,IAAIA,QAAQ,CAACC,IADd,EAEXC,IAFW,GAGXC,MAHW,CAGJC,CAAC,IAAIT,KAAK,CAACU,IAAN,CAAWD,CAAX,CAHD,CAAd;AAID;;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAYlB,WAAZ;AACA,WAAKmB,QAAL,CAAc,OAAO;AAAEnB,QAAAA;AAAF,OAAP,CAAd;AACD,KAhBsC;AAAA;;AAkBvCoB,EAAAA,iBAAiB,GAAG;AAAA,UACVpB,WADU,GACM,KAAKD,KADX,CACVC,WADU;;AAElB,QAAIA,WAAW,CAACK,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,aAAO,IAAP;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,WAAW,CAACU,GAAZ,CAAgBC,QAAQ,IACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,QAAL,CADD,CADH,CADF;AAOD;;AACDU,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,QAAQ,EAAE,KAAKpB,aAAtB;AAAqC,MAAA,IAAI,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEG,KAAKmB,iBAAL,EAFH,CADF;AAMD;;AAtCsC;AAyCzC,eAAetB,SAAf","sourcesContent":["import React, { Component } from 'react';\n\nexport class Searchbar extends Component {\n  state = {\n    suggestions: []\n  };\n  onTextChanged = e => {\n    const value = e.target.value;\n    let suggestions = [];\n    if (value.length > 0) {\n      const regex = new RegExp(`^${value}`, 'i');\n      suggestions = this.props.buildings\n        .map(building => building.name)\n        .sort()\n        .filter(v => regex.test(v));\n    }\n    console.log(suggestions);\n    this.setState(() => ({ suggestions }));\n  };\n\n  renderSuggestions() {\n    const { suggestions } = this.state;\n    if (suggestions.length === 0) {\n      return null;\n    }\n    return (\n      <ul>\n        {suggestions.map(building => (\n          <li>{building}</li>\n        ))}\n      </ul>\n    );\n  }\n  render() {\n    return (\n      <div>\n        <input onChange={this.onTextChanged} type='text' />\n        {this.renderSuggestions()}\n      </div>\n    );\n  }\n}\n\nexport default Searchbar;\n"]},"metadata":{},"sourceType":"module"}